#importar las librerias
import streamlit as st
import os
import pandas as pd
import numpy as np
import pickle
import plotly.graph_objs as go
from plotly.subplots import make_subplots
import matplotlib.pyplot as plt
import seaborn as sns
#disabling the warnings
import warnings
warnings.filterwarnings("ignore")

def main():
   st.set_page_config(
   page_title="OBSERVATORIO DEL HABITAT URBANO | Deficit Habitacional",
   page_icon="üåé",
   layout="wide",
   initial_sidebar_state="expanded",
   menu_items=None)

    
   # Header
   st.header('__OBSERVATORIO DEL H√ÅBITAT URBANO__ | D√©ficit Habitacional')

   # Text

   tab1, tab2, tab3 , tab4 = st.tabs(["Presentaci√≥n", "Metodolog√≠a", "Series de Tiempo", "Pr√≥ximas incorporaciones"])

   with tab1:
      st.subheader('Presentaci√≥n')
      st.markdown('El __Observatorio del H√°bitat Urbano__ tiene como objetivo generar indicadores que permitan __visibilizar problem√°ticas__ vinculadas al h√°bitat urbano en la Argentina y __monitorear la efectividad__ de las pol√≠ticas p√∫blicas aplicadas.')  
      st.markdown('Como primer paso, se avanz√≥ en la construcci√≥n del primer indicador de __evoluci√≥n del D√©ficit Habitacional__ en los aglomerados de la __Argentina__. La secci√≥n de _"Metodolog√≠a"_ detalla c√≥mo se construyen el indicador y los gr√°ficos de la secci√≥n _"Visualizaciones"_.')
      st.markdown('Es intenci√≥n de los y las investigadoras incrementar el n√∫mero de indicadores a ser representados por lo que cualquier aporte es bienvenido.')
      st.markdown('Investigadorxs: Guadalupe __Atienza Rela__ | Santiago __Federico__')
   
   with tab2:
      st.subheader('Metodolog√≠a')
      st.markdown('Existen diversas metodolog√≠as para calcular __d√©ficit habitacional__. En este caso, se utiliza la metodolog√≠a seguida por el __Gobierno de la Ciudad de Buenos Aires__, que toma la propuesta desarrollada por la __CEPAL__ en el documento _‚ÄúAm√©rica Latina: informaci√≥n y herramientas socio-demogr√°ficas para analizar y atender el d√©ficit habitacional‚Äù_, la cual permite obtener estimaciones compatibles _(y por tanto comparables)_ con los datos disponibles a nivel nacional y de otros pa√≠ses de la __regi√≥n de Am√©rica Latina__.')
      st.markdown('Esta metodolog√≠a distingue entre dos formas de d√©ficit: __cuantitativo__, que refiere al excedente de hogares en relaci√≥n a la cantidad de viviendas no precarias o mejorables (o, dicho de otro modo, a la cantidad de viviendas que faltan en relaci√≥n a la cantidad de hogares existentes); y __cualitativo__, que refiere a la cantidad de hogares que viven en viviendas en otro tipo de condiciones deficitarias.')
      st.markdown('La base de datos de __Encuesta Permanente de Hogares__ proporciona todas las variables necesarias para realizar este c√°lculo. Para poder realizarlo primero deben tenerse en cuenta las siguientes definiciones.')   
      st.markdown('__- Viviendas precarias irrecuperables:__ son aquellas que por la calidad de los materiales con que han sido construidas o por su naturaleza no pueden ser mejoradas en sus condiciones de habitabilidad. Las categor√≠as que corresponden a esta definici√≥n son: Local no construido para habitaci√≥n, Otros (incluye casillas, ranchos y otro tipo de construcciones semejantes).')
      st.markdown('__- Viviendas precarias recuperables:__ son aquellas que mediante obras de refacci√≥n pueden mejorar sus condiciones de habitabilidad. Las categor√≠as que corresponden a esta definici√≥n son: Pieza en Inquilinatos, hoteles o pensiones y Casas Tipo B (todas las que cumplen por lo menos con una de las siguientes condiciones: tienen piso de tierra o ladrillo suelto u otro material y/o no tienen provisi√≥n de agua por ca√±er√≠a dentro de la vivienda y/o no disponen de inodoro con descarga de agua).')
      st.markdown('__- Viviendas no precarias:__ son aquellas de condiciones materiales satisfactorias. Las categor√≠as que corresponden a esta definici√≥n son: Departamentos y Casas Tipo A.')
      st.markdown('__- Hacinamiento cr√≠tico:__ hogares que presentan tres o m√°s personas por habitaci√≥n utilizada para dormir.')
      st.markdown('Para establecer la condici√≥n de d√©ficit habitacional como atributo de cada uno de los hogares, se proceder√° entonces a crear variables que registren para cada observaci√≥n si se trata de hogares que habitan en viviendas precarias irrecuperables o recuperables, o presentan hacinamiento cr√≠tico.')
      st.markdown('Una vez definidas estas variables podemos calcular la condici√≥n de los hogares en relaci√≥n al d√©ficit habitacional. Contemplaremos como hemos dicho ambos tipos de d√©ficit (cuanti y cualitativo):')
      st.markdown('__- Hogares con d√©ficit habitacional cuantitativo:__ hogares que comparten su vivienda o viven en viviendas precarias irrecuperables.')
      st.markdown('__- Hogares con d√©ficit habitacional cualitativo de tipo I:__ hogares que viven en viviendas precarias recuperables.')
      st.markdown('__- Hogares con d√©ficit habitacional cualitativo de tipo II:__ hogares que viven en viviendas no precarias en condici√≥n de hacinamiento cr√≠tico.')
   
   with tab3:
      opciones = {'D√©ficit Habitacional':['D√©ficit Habitacional Consolidado','Hogares por vivienda','Viviendas irrecuperables','Viviendas recuperables','Hacinamiento en viviendas'],
                  #'Din√°micas del Mercado de Suelos':['1','2']
                  }
      
      seleccion = st.multiselect('Seleccione la __serie de tiempo__ a visualizar:', opciones.keys())
    
      for dataset in seleccion:
         st.header(dataset)
         aglomerado = st.selectbox(
         "Selecci√≥n del __aglomerado__ a visualizar", 
         ('Gran La Plata','Bah√≠a Blanca ‚Äê Cerri','Gran Rosario','Gran Santa F√©','Gran Paran√°','Posadas', 'Gran Resistencia', 'Cdro. Rivadavia ‚Äì Rada Tilly', 'Gran Mendoza', 
            'Corrientes', 'Gran C√≥rdoba', 'Concordia', 'Formosa', 'Neuqu√©n ‚Äì Plottier', 'S.del Estero ‚Äê La Banda', 'Jujuy ‚Äê Palpal√°', 'R√≠o Gallegos', 'Gran Catamarca', 'Salta', 
            'La Rioja', 'San Luis ‚Äê El Chorrillo', 'Gran San Juan', 'Gran Tucum√°n ‚Äê T. Viejo', 'Santa Rosa ‚Äê Toay', 'Ushuaia ‚Äê R√≠o Grande', 'Ciudad de Buenos Aires', 'Partidos del GBA', 
            'Mar del Plata ‚Äê Bat√°n', 'R√≠o Cuarto', 'San Nicol√°s ‚Äì Villa Constituci√≥n', 'Rawson ‚Äì Trelew', 'Viedma ‚Äì Carmen de Patagones'),key=0)
         
         graficos_seleccionados = st.multiselect(f'Selecci√≥n de __Series de Tiempo__ para {dataset}:', opciones[dataset])
                  
         if 'D√©ficit Habitacional Consolidado' in graficos_seleccionados:
            data = pd.read_csv('porcentajes_totales.csv',sep=';')
            data = data.set_index(['DATE'])
            fig=go.Figure()
            fig.add_trace(go.Scatter(x=data.index,y=data[aglomerado],name=f'D√©ficit Habitacional para el aglomerado de {aglomerado}'))
            fig.add_trace(go.Scatter(x=data.index,y=data['Promedio Nacional'],name=f'D√©ficit Habitacional, promedio nacional'))
            fig.update_layout(title=f'Porcentaje de D√©ficit Habitacional consolidado para el aglomerado de {aglomerado}',xaxis_title='Fecha',yaxis_title='Hogares con d√©ficit habitacional(%)', height=600)
            fig.update_layout(hovermode="x unified")
            fig.update_xaxes(
            tickformat="%m-%Y", 
            dtick="M3")
            st.plotly_chart(fig, use_container_width=True)
            st.caption('Fuente: Elaboraci√≥n propia en base a datos de la EPH (2003-2022)')

         if 'Hogares por vivienda' in graficos_seleccionados:   
            data = pd.read_csv('porcentajes_hogarxviv.csv',sep=';')
            data = data.set_index(['DATE'])
            fig=go.Figure()
            fig.add_trace(go.Scatter(x=data.index,y=data[aglomerado],name=f'Viviendas con m√°s de un hogar para el aglomerado de {aglomerado}'))
            fig.add_trace(go.Scatter(x=data.index,y=data['Promedio Nacional'],name=f'Viviendas con m√°s de un hogar, promedio nacional'))
            fig.update_layout(title=f'Porcentaje de viviendas con m√°s de un hogar para el aglomerado de {aglomerado}',xaxis_title='Fecha',yaxis_title='Viviendas con m√°s de un hogar (%)', height=600)
            fig.update_layout(hovermode="x unified")
            fig.update_xaxes(
            tickformat="%m-%Y", 
            dtick="M3")
            st.plotly_chart(fig, use_container_width=True)
            st.caption('Fuente: Elaboraci√≥n propia en base a datos de la EPH (2003-2022)')
         
         if 'Viviendas irrecuperables' in graficos_seleccionados:
            data = pd.read_csv('porcentajes_viv_irre.csv',sep=';')
            data = data.set_index(['DATE'])
            fig=go.Figure()
            fig.add_trace(go.Scatter(x=data.index,y=data[aglomerado],name=f'Viviendas irrecuperables para el aglomerado de {aglomerado}'))
            fig.add_trace(go.Scatter(x=data.index,y=data['Promedio Nacional'],name=f'Viviendas irrecuperables, promedio nacional'))
            fig.update_layout(title=f'Porcentaje de viviendas irrecuperables para el aglomerado de {aglomerado}',xaxis_title='Fecha',yaxis_title='Viviendas irrecuperables(%)', height=600)
            fig.update_layout(hovermode="x unified")
            fig.update_xaxes(
            tickformat="%m-%Y", 
            dtick="M3")
            st.plotly_chart(fig, use_container_width=True)
            st.caption('Fuente: Elaboraci√≥n propia en base a datos de la EPH (2003-2022)')
         
         if 'Viviendas recuperables' in graficos_seleccionados:
            data = pd.read_csv('porcentajes_viv_recu.csv',sep=';')
            data = data.set_index(['DATE'])
            fig=go.Figure()
            fig.add_trace(go.Scatter(x=data.index,y=data[aglomerado],name=f'Viviendas recuperables para el aglomerado de {aglomerado}'))
            fig.add_trace(go.Scatter(x=data.index,y=data['Promedio Nacional'],name=f'Viviendas recuperables, promedio nacional'))
            fig.update_layout(title=f'Porcentaje de viviendas recuperables para el aglomerado de {aglomerado}',xaxis_title='Fecha',yaxis_title='Viviendas recuperables(%)', height=600)
            fig.update_layout(hovermode="x unified")
            fig.update_xaxes(
            tickformat="%m-%Y", 
            dtick="M3")
            st.plotly_chart(fig, use_container_width=True)
            st.caption('Fuente: Elaboraci√≥n propia en base a datos de la EPH (2003-2022)')

         if 'Hacinamiento en viviendas' in graficos_seleccionados:
            data = pd.read_csv('porcentajes_viv_hac.csv',sep=';')
            data = data.set_index(['DATE'])
            fig=go.Figure()
            fig.add_trace(go.Scatter(x=data.index,y=data[aglomerado],name=f'Hacinamiento en viviendas para el aglomerado de {aglomerado}'))
            fig.add_trace(go.Scatter(x=data.index,y=data['Promedio Nacional'],name=f'Hacinamiento en viviendas, promedio nacional'))
            fig.update_layout(title=f'Porcentaje de Hacinamiento en viviendas para el aglomerado de {aglomerado}',xaxis_title='Fecha',yaxis_title='Hacinamiento en viviendas (%)', height=600)
            fig.update_layout(hovermode="x unified")
            fig.update_xaxes(
            tickformat="%m-%Y", 
            dtick="M3")
            st.plotly_chart(fig, use_container_width=True)
            st.caption('Fuente: Elaboraci√≥n propia en base a datos de la EPH (2003-2022)')

   with tab4:
      st.subheader('Pr√≥ximas incorporaciones')
      st.markdown('__- Din√°micas del mercado de suelos__')
      st.markdown('__- Acceso al cr√©dito__')
      st.markdown('__- Crecimiento de la mancha urbana__')
      st.markdown('__- Modelos predictivos__')

if __name__ == '__main__':
    main()